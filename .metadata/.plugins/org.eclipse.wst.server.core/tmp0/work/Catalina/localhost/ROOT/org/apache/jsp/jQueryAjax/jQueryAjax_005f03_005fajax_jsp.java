/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.10
 * Generated at: 2018-08-20 11:15:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jQueryAjax;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class jQueryAjax_005f03_005fajax_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-2.2.4.min.js\"></script>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("function send() {\n");
      out.write("\tvar n1 = $(\"#num1\").val();\n");
      out.write("\tvar n2 = $(\"#num2\").val();\n");
      out.write("\tvar oper = $(\"#oper\").val();\n");
      out.write("\t\n");
      out.write("\t// $.ajax를 이용한 Ajax 요청-응답 처리\n");
      out.write("\t$.ajax({\n");
      out.write("\t\ttype:\"post\"\n");
      out.write("\t\t, url: \"/jQueryAjax/jQueryAjax_ok_02.jsp\"\n");
      out.write("\t\t, data: {\"num1\":n1, \"num2\":n2, \"oper\":oper }\n");
      out.write("// \t\t, dataType: \"text\"\n");
      out.write("// \t\t, dataType: \"json\"\n");
      out.write("\t\t, success: function(data){\n");
      out.write("\t\t\tconsole.log(\"----success----\");\n");
      out.write("\t\t\tconsole.log(data);\n");
      out.write("// \t\t\tconsole.log(data.abc); // dataType :\"json\" 일 때 사용\n");
      out.write("// \t\t\tvar json = JSON.parse(data);\n");
      out.write("// \t\t\tconsole.log(json.abc);\n");
      out.write("\t\t\t$(\"#resultLayout\").html(data.result);\n");
      out.write("\t\t}\n");
      out.write("\t\t, error : function(e){\n");
      out.write("\t\t\tconsole.log(\"----error----\");\n");
      out.write("\t\t\tconsole.log(e.responseText);\n");
      out.write("\t\t}\n");
      out.write("\t\t, complete: function(){\n");
      out.write("\t\t\t//입력 창 초기화\n");
      out.write("\t\t\t$(\"#num1\").val(\"\");\n");
      out.write("\t\t\t$(\"#num2\").val(\"\");\n");
      out.write("\t\t\t$(\"#oper\").val(\"add\");\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<input type=\"text\" id=\"num1\" name=\"num1\" />\n");
      out.write("<select id=\"oper\" style=\"vertical-align: middle; height:22px;\">\n");
      out.write("\t<option value=\"add\">더하기</option>\n");
      out.write("\t<option value=\"sub\">빼기</option>\n");
      out.write("\t<option value=\"mul\">곱하기</option>\n");
      out.write("\t<option value=\"div\">나누기</option>\n");
      out.write("</select>\n");
      out.write("<input type=\"text\" id=\"num2\" name=\"num2\"/>\n");
      out.write("<button onclick=\"send();\"> = </button>\n");
      out.write("<hr>\n");
      out.write("<div id=\"resultLayout\"></div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
